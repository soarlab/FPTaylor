# 1 "input_lexer.mll"
 
  open Input_parser
  open Lexing

  let incr_lineno lexbuf =
    let pos = lexbuf.lex_curr_p in
    lexbuf.lex_curr_p <- { pos with
      pos_lnum = pos.pos_lnum + 1;
      pos_bol = pos.pos_cnum;
    }

  let resolve_id =
    let table = Hashtbl.create 100 in
    let () = List.iter (fun (k, v) -> Hashtbl.add table k v) [
      "Constants", CONSTANTS;
      "constants", CONSTANTS;
      "Variables", VARIABLES;
      "variables", VARIABLES;
      "Definitions", DEFINITIONS;
      "definitions", DEFINITIONS;
      "Constraints", CONSTRAINTS;
      "constraints", CONSTRAINTS;
      "Expressions", EXPRESSIONS;
      "expressions", EXPRESSIONS;
      "IN", IN;
      "in", IN;
      "int", INT;
      "real", REAL;
      "float16", FLOAT(16);
      "float32", FLOAT(32);
      "float64", FLOAT(64);
      "float128", FLOAT(128);
      "rnd", RND;
      "no_rnd", NO_RND;
      "rnd16_ne", RND_PAR(16, "ne"); 
      "rnd16", RND_PAR(16, "ne"); 
      "rnd16_0", RND_PAR(16, "zero");
      "rnd16_down", RND_PAR(16, "down");
      "rnd16_up", RND_PAR(16, "up");
      "rnd32_ne", RND_PAR(32, "ne");
      "rnd32", RND_PAR(32, "ne");
      "rnd32_0", RND_PAR(32, "zero");
      "rnd32_down", RND_PAR(32, "down");
      "rnd32_up", RND_PAR(32, "up");
      "rnd64_ne", RND_PAR(64, "ne");
      "rnd64", RND_PAR(64, "ne");
      "rnd64_0", RND_PAR(64, "zero");
      "rnd64_down", RND_PAR(64, "down");
      "rnd64_up", RND_PAR(64, "up");
      "rnd128_ne", RND_PAR(128, "ne");
      "rnd128", RND_PAR(128, "ne");
      "rnd128_0", RND_PAR(128, "zero");
      "rnd128_down", RND_PAR(128, "down");
      "rnd128_up", RND_PAR(128, "up");
      "inv", INV;
      "abs", ABS;
      "fma", FMA;
      "sqrt", SQRT;
      "min", MIN;
      "max", MAX;
      "exp", EXP;
      "log", LOG;
      "cos", COS;
      "sin", SIN;
      "tan", TAN;
      "cosh", COSH;
      "sinh", SINH;
      "tanh", TANH;
      "acos", ACOS;
      "asin", ASIN;
      "atan", ATAN;
      "atan2", ATAN2;
      "arccos", ACOS;
      "arcsin", ASIN;
      "arctan", ATAN;
      "acosh", ACOSH;
      "asinh", ASINH;
      "atanh", ATANH;
      "arsinh", ASINH;
      "arcosh", ACOSH;
      "artanh", ATANH;
      "arcsinh", ASINH;
      "arccosh", ACOSH;
      "arctanh", ATANH;
      "argsinh", ASINH;
      "argcosh", ACOSH;
      "argtanh", ATANH;
      "relu", RELU;
      "sub2", SUB2;
      "floor_power2", FLOOR_POWER2;
    ] in
  fun str ->
    try Hashtbl.find table str
    with Not_found -> ID str


# 99 "input_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\227\255\228\255\088\000\025\000\002\000\003\000\236\255\
    \237\255\239\255\240\255\045\000\242\255\243\255\244\255\245\255\
    \246\255\247\255\248\255\249\255\250\255\165\000\178\000\254\255\
    \255\255\049\000\001\000\252\255\253\255\193\000\251\000\011\001\
    \036\001\074\001\112\001\150\001\188\001\215\001\227\001\253\001\
    \009\002\074\002\112\002\150\002\001\000\231\255\235\255\234\255\
    \230\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\026\000\027\000\023\000\022\000\255\255\
    \255\255\255\255\255\255\014\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\004\000\004\000\255\255\
    \255\255\017\000\000\000\255\255\255\255\255\255\004\000\255\255\
    \004\000\004\000\003\000\002\000\004\000\255\255\004\000\004\000\
    \003\000\002\000\004\000\004\000\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\000\000\
    \000\000\255\255\026\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\024\000\023\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \024\000\000\000\000\000\000\000\003\000\004\000\000\000\000\000\
    \020\000\019\000\009\000\011\000\012\000\010\000\045\000\025\000\
    \022\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\013\000\014\000\006\000\007\000\005\000\047\000\
    \046\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\018\000\044\000\017\000\008\000\003\000\
    \026\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\016\000\003\000\015\000\048\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\003\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\030\000\000\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\000\000\
    \030\000\000\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\037\000\000\000\037\000\000\000\
    \000\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\029\000\028\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\029\000\027\000\029\000\
    \028\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\029\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\031\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\033\000\000\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\000\000\027\000\
    \029\000\028\000\000\000\000\000\000\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\029\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\000\000\032\000\032\000\032\000\
    \034\000\036\000\035\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\000\000\000\000\000\000\029\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\033\000\000\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\000\000\033\000\033\000\033\000\040\000\042\000\
    \041\000\032\000\032\000\032\000\032\000\032\000\032\000\000\000\
    \000\000\000\000\029\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\033\000\000\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \000\000\032\000\032\000\032\000\034\000\036\000\035\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\000\000\000\000\000\000\
    \029\000\000\000\000\000\000\000\000\000\000\000\000\000\037\000\
    \000\000\037\000\033\000\000\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\000\000\032\000\
    \032\000\032\000\034\000\036\000\035\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\000\000\000\000\000\000\029\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\033\000\000\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\032\000\032\000\032\000\
    \034\000\036\000\035\000\000\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\000\000\000\000\029\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\000\000\
    \000\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\000\000\032\000\032\000\032\000\034\000\
    \036\000\035\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \000\000\000\000\000\000\029\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\000\000\028\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\033\000\033\000\033\000\040\000\042\000\041\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\029\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\037\000\000\000\037\000\000\000\000\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\000\000\033\000\033\000\033\000\040\000\042\000\
    \041\000\033\000\033\000\033\000\033\000\033\000\033\000\000\000\
    \000\000\000\000\029\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \000\000\033\000\033\000\033\000\040\000\042\000\041\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\000\000\000\000\000\000\
    \029\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\
    \033\000\033\000\040\000\042\000\041\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\029\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\026\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\044\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\
    \006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\011\000\000\000\000\000\000\000\
    \025\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\000\000\004\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\255\255\255\255\255\255\255\255\003\000\
    \255\255\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\021\000\255\255\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\255\255\
    \022\000\255\255\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\029\000\255\255\029\000\255\255\
    \255\255\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\026\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\021\000\021\000\021\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\021\000\022\000\022\000\
    \022\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\022\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\022\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\031\000\031\000\031\000\031\000\
    \031\000\031\000\032\000\255\255\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\255\255\030\000\
    \030\000\030\000\255\255\255\255\255\255\032\000\032\000\032\000\
    \032\000\032\000\032\000\030\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\255\255\032\000\032\000\032\000\
    \032\000\032\000\032\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\255\255\255\255\255\255\032\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\034\000\255\255\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\255\255\033\000\033\000\033\000\033\000\033\000\
    \033\000\034\000\034\000\034\000\034\000\034\000\034\000\255\255\
    \255\255\255\255\033\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\035\000\255\255\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \255\255\034\000\034\000\034\000\034\000\034\000\034\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\255\255\255\255\255\255\
    \034\000\255\255\255\255\255\255\255\255\255\255\255\255\036\000\
    \255\255\036\000\036\000\255\255\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\255\255\035\000\
    \035\000\035\000\035\000\035\000\035\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\255\255\255\255\255\255\035\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\038\000\255\255\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\255\255\038\000\038\000\038\000\038\000\
    \038\000\038\000\255\255\255\255\036\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\255\255\
    \255\255\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\255\255\038\000\038\000\038\000\038\000\
    \038\000\038\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \255\255\255\255\255\255\038\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\039\000\255\255\039\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\040\000\040\000\040\000\040\000\040\000\040\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\040\000\041\000\041\000\041\000\041\000\041\000\041\000\
    \041\000\041\000\041\000\041\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\041\000\041\000\041\000\041\000\041\000\
    \041\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\042\000\255\255\042\000\255\255\255\255\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\255\255\041\000\041\000\041\000\041\000\041\000\
    \041\000\042\000\042\000\042\000\042\000\042\000\042\000\255\255\
    \255\255\255\255\041\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \255\255\042\000\042\000\042\000\042\000\042\000\042\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\255\255\255\255\255\255\
    \042\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\043\000\
    \043\000\043\000\043\000\043\000\043\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\043\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 110 "input_lexer.mll"
               ( token lexbuf )
# 378 "input_lexer.ml"

  | 1 ->
# 111 "input_lexer.mll"
         ( incr_lineno lexbuf; token lexbuf )
# 383 "input_lexer.ml"

  | 2 ->
let
# 112 "input_lexer.mll"
                      str
# 389 "input_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 112 "input_lexer.mll"
                          ( SINGLE_NUMERAL (String.sub str 0 (String.length str - 1)) )
# 393 "input_lexer.ml"

  | 3 ->
let
# 113 "input_lexer.mll"
                      str
# 399 "input_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 113 "input_lexer.mll"
                          ( DOUBLE_NUMERAL (String.sub str 0 (String.length str - 1)) )
# 403 "input_lexer.ml"

  | 4 ->
let
# 114 "input_lexer.mll"
               str
# 409 "input_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 114 "input_lexer.mll"
                   ( NUMBER str )
# 413 "input_lexer.ml"

  | 5 ->
# 115 "input_lexer.mll"
        ( LPAREN )
# 418 "input_lexer.ml"

  | 6 ->
# 116 "input_lexer.mll"
        ( RPAREN )
# 423 "input_lexer.ml"

  | 7 ->
# 117 "input_lexer.mll"
        ( LBRACKET )
# 428 "input_lexer.ml"

  | 8 ->
# 118 "input_lexer.mll"
        ( RBRACKET )
# 433 "input_lexer.ml"

  | 9 ->
# 119 "input_lexer.mll"
        ( LBRACE )
# 438 "input_lexer.ml"

  | 10 ->
# 120 "input_lexer.mll"
        ( RBRACE )
# 443 "input_lexer.ml"

  | 11 ->
# 121 "input_lexer.mll"
        ( SEMICOLON )
# 448 "input_lexer.ml"

  | 12 ->
# 122 "input_lexer.mll"
        ( COLON )
# 453 "input_lexer.ml"

  | 13 ->
# 123 "input_lexer.mll"
        ( COMMA )
# 458 "input_lexer.ml"

  | 14 ->
# 124 "input_lexer.mll"
        ( PLUS )
# 463 "input_lexer.ml"

  | 15 ->
# 125 "input_lexer.mll"
        ( MINUS )
# 468 "input_lexer.ml"

  | 16 ->
# 126 "input_lexer.mll"
        ( MULT )
# 473 "input_lexer.ml"

  | 17 ->
# 127 "input_lexer.mll"
        ( DIVIDE )
# 478 "input_lexer.ml"

  | 18 ->
# 128 "input_lexer.mll"
        ( POW )
# 483 "input_lexer.ml"

  | 19 ->
# 129 "input_lexer.mll"
        ( EQ )
# 488 "input_lexer.ml"

  | 20 ->
# 130 "input_lexer.mll"
         ( LE )
# 493 "input_lexer.ml"

  | 21 ->
# 131 "input_lexer.mll"
         ( GE )
# 498 "input_lexer.ml"

  | 22 ->
# 132 "input_lexer.mll"
        ( LT )
# 503 "input_lexer.ml"

  | 23 ->
# 133 "input_lexer.mll"
        ( GT )
# 508 "input_lexer.ml"

  | 24 ->
# 134 "input_lexer.mll"
          ( PLUS_MINUS )
# 513 "input_lexer.ml"

  | 25 ->
# 135 "input_lexer.mll"
         ( E_CONST )
# 518 "input_lexer.ml"

  | 26 ->
let
# 136 "input_lexer.mll"
          str
# 524 "input_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 136 "input_lexer.mll"
              ( resolve_id str )
# 528 "input_lexer.ml"

  | 27 ->
# 137 "input_lexer.mll"
      ( token lexbuf )
# 533 "input_lexer.ml"

  | 28 ->
# 138 "input_lexer.mll"
        ( EOF )
# 538 "input_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

